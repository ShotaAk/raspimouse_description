<?xml version="1.0"?>
<robot name="raspimouse_on_gazebo"
       xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:arg name="lidar" default="none" />
  <xacro:arg name="gazebo_plugin" default="true" />
  <xacro:arg name="tf" default="false" />
  <xacro:arg name="jointstate" default="true" />
  <xacro:arg name="robot_namespace" default="" />
  <xacro:arg name="diffdrive_namespace" default="/" />
  <xacro:arg name="sensor_namespace" default="raspimouse_on_gazebo" />

  <xacro:include filename="$(find raspimouse_description)/urdf/common.xacro" />
  <xacro:include filename="$(find raspimouse_description)/urdf/body/body.urdf.xacro" />
  <xacro:include filename="$(find raspimouse_description)/urdf/wheel/wheel.urdf.xacro" />
  <xacro:include filename="$(find raspimouse_description)/urdf/sensors/lightsens.urdf.xacro" />
  <xacro:include filename="$(find raspimouse_description)/urdf/sensors/lrf.urdf.xacro" />

  <!-- =============== Link & Joint =============== -->
  <!-- Base -->
  <link name="base_footprint" />

  <xacro:base parent="base_footprint" lidar="$(arg lidar)">
    <origin xyz="0 0 0.00185" />
  </xacro:base>

  <!-- Wheel -->
  <xacro:wheel prefix="right" parent="base_link">
    <origin xyz="0 -0.0425 0.02215" rpy="1.57 0 0" />
    <axis xyz="0 0 -1" />
  </xacro:wheel>
  <xacro:wheel prefix="left" parent="base_link">
    <origin xyz="0 0.0425 0.02215" rpy="-1.57 0 0" />
    <axis xyz="0 0 1" />
  </xacro:wheel>

  <!-- Sensors -->
  <xacro:light_sensor prefix="rf" parent="base_link">
    <origin xyz="0.04 -0.045 0.032" rpy="0 0 0" />
  </xacro:light_sensor>

  <xacro:light_sensor prefix="rs" parent="base_link">
    <origin xyz="0.059 -0.01 0.032" rpy="0 0 -1.04" />
  </xacro:light_sensor>

  <xacro:light_sensor prefix="ls" parent="base_link">
    <origin xyz="0.059 0.01 0.032" rpy="0 0 1.04" />
  </xacro:light_sensor>

  <xacro:light_sensor prefix="lf" parent="base_link">
    <origin xyz="0.04 0.045 0.032" rpy="0 0 0" />
  </xacro:light_sensor>

  <xacro:if value="${'$(arg lidar)' == 'urg'}">
    <xacro:lrf_sensor prefix="urg_lrf_link" parent="base_link">
      <origin xyz="0.0 0.0 0.14060" rpy="0 0 0" />
    </xacro:lrf_sensor>
  </xacro:if>


  <!-- =============== Gazebo =============== -->
  <gazebo>
    <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
      <robotNamespace>$(arg robot_namespace)</robotNamespace>
    </plugin>
  </gazebo>

  <!-- Sensors -->
  <xacro:lightsensor_gazebo prefix="rf" base_rad="0"
    rad_range="0.3" min_range="0.01" max_range="0.6"
    robot_namespace="$(arg sensor_namespace)" />
  <xacro:lightsensor_gazebo prefix="rs" base_rad="-1.04"
    rad_range="0.3" min_range="0.01" max_range="0.6"
    robot_namespace="$(arg sensor_namespace)" />
  <xacro:lightsensor_gazebo prefix="ls" base_rad="1.04"
    rad_range="0.3" min_range="0.01" max_range="0.6"
    robot_namespace="$(arg sensor_namespace)" />
  <xacro:lightsensor_gazebo prefix="lf" base_rad="0"
    rad_range="0.3" min_range="0.01" max_range="0.6"
    robot_namespace="$(arg sensor_namespace)" />

  <xacro:if value="${'$(arg lidar)' == 'urg'}">
    <xacro:lrf_gazebo prefix="urg" base_rad="0" rad_range="4.71" min_range="0.10" max_range="5.6" />
  </xacro:if>

  <!-- DiffDriveController -->
  <gazebo>
    <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <!-- Name of robot namespace of DiffDriveController -->
      <robotNamespace>$(arg diffdrive_namespace)</robotNamespace>

      <alwaysOn>true</alwaysOn>

      <updateRate>50</updateRate>

      <!-- Set to true to swap right and left wheels, defaults to true -->
      <legacyMode>false</legacyMode>
      <rosDebugLevel>na</rosDebugLevel>

      <!-- Name of left joint, defaults to `left_joint` -->
      <leftJoint>left_wheel_joint</leftJoint>
      <!-- Name of right joint, defaults to `right_joint` -->
      <rightJoint>right_wheel_joint</rightJoint>
      <robotBaseFrame>base_footprint</robotBaseFrame>
      <!-- Topic to receive geometry_msgs/Twist message commands, defaults to `cmd_vel` -->
      <commandTopic>cmd_vel</commandTopic>
      <!-- Topic to publish nav_msgs/Odometry messages, defaults to `odom` -->
      <odometryTopic>odom</odometryTopic>
      <!-- Odometry frame, defaults to `odom` -->
      <odometryFrame>odom</odometryFrame>
      <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
      <odometrySource>world</odometrySource>

      <!-- Phisical wheel params -->
      <wheelSeparation>${wheel_separation}</wheelSeparation>
      <wheelDiameter>${wheel_radius*2.0}</wheelDiameter>
      <!-- Maximum torque which the wheels can produce, in Nm, defaults to 5 Nm -->
      <wheelTorque>500</wheelTorque>
      <!-- Wheel acceleration, in rad/s^2, defaults to 0.0 rad/s^2 -->
      <wheelAcceleration>0</wheelAcceleration>
      <!-- Set to true to publish /odom (nav_msgs::Odometry), defaults to true -->
      <publishTf>$(arg tf)</publishTf>
      <!-- Set to true to publish transforms for the wheel links, defaults to false -->
      <publishWheelTF>$(arg tf)</publishWheelTF>
      <!-- Set to true to publish transforms for the odometry, defaults to true -->
      <publishOdomTF>$(arg tf)</publishOdomTF>
      <!-- Set to true to publish sensor_msgs/JointState on /joint_states for the wheel joints, defaults to false -->
      <publishWheelJointState>$(arg jointstate)</publishWheelJointState>
    </plugin>
  </gazebo>

  <raspimouse_on_gazebo/>
</robot>